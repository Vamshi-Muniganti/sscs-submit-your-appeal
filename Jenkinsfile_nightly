#!groovy

properties([
        pipelineTriggers([cron('00 20 * * *')]),
        parameters([
                string(name: 'URL_TO_TEST', defaultValue: 'https://benefit-appeal.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
                booleanParam(name: 'USE_PROXY_SERVER', defaultValue: true, description: 'use proxy server for tests (proxyout.reform.hmcts.net:8080)'),
        ])
])

@Library("Infrastructure")

def product = "sscs-tribunals"
def component = "frontend"
def secrets = [
        'sscs-${env}': [
                secret('idam-sscs-oauth2-client-secret', 'SERVICES_IDAM_SECRET'),
                secret('postcode-lookup-token', 'POSTCODE_LOOKUP_TOKEN'),
                secret('pcq-token-key', 'SERVICE_TOKEN_KEY')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline("nodejs", product, component) {
    if (params.USE_PROXY_SERVER) {
        env.PROXY_SERVER = 'http://proxyout.reform.hmcts.net:8080'
    }
    loadVaultSecrets(secrets)
    env.TEST_URL = params.URL_TO_TEST

    before('DependencyCheckNightly') {sh 'yarn audit'}
    enableCrossBrowserTest()
    enableSecurityScan()
    enableFullFunctionalTest(200)

    after('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
        enableSlackNotifications('#sscs-tech') 
     }

     after('fullFunctionalTest') {

        publishHTML target: [
                allowMissing : true,
                alwaysLinkToLastBuild: true,
                keepAll : true,
                reportDir : "output",
                reportFiles : "SYA-e2e-result.html",
                reportName : "SYA E2E functional tests result"
        ]
    }
}
